# vim:ft=sh et sw=2 ts=2:

unset PS1
export SHELL="$(which zsh)"
alias zshrc="vim ~/.golly-rc/assets/shell.rc-zsh && echo Reloading... && . ~/.zshrc"

[ -e ~/.bloop/zsh ] && fpath=(~/.bloop/zsh $fpath)
autoload -U +X compinit && compinit
autoload -U +X bashcompinit && bashcompinit
source "$HOME/.golly-rc/assets/shell.rc-shared"

HISTSIZE=20000
SAVEHIST=20000
HISTFILE=~/.zsh_history

# Options described here: http://linux.die.net/man/1/zshoptions
setopt append_history
setopt extended_history
setopt hist_expire_dups_first
#setopt hist_ignore_dups # ignore duplication command history list
#setopt hist_ignore_space
#setopt hist_verifys
setopt inc_append_history
#setopt share_history # share command history data

autoload -U colors && colors

function git_count_files_in_section() {
  grep "^$2 [^ ]" <<<"$1" | wc -l | sed -e 's/^ *//'
}

function git_info() {
  ref="$(git symbolic-ref HEAD 2>/dev/null)" || return
  git_status="$(git status --porcelain --branch 2>/dev/null)"
  ahead="$(sed '/.*\[ahead .*/!d; s/^.*\[ahead \([0-9]*\).*\]/\1/' <<<"$git_status")"
  behind="$(sed '/.*\[.*behind .*/!d; s/^.*\[.*behind \([0-9]*\).*\]/\1/' <<<"$git_status")"
  untracked="$(git_count_files_in_section "$git_status" '??')"
  unstaged="$(git_count_files_in_section "$git_status" '.[^ ?#]')"
  staged="$(git_count_files_in_section "$git_status" '[^ ?#].')"

  r="%{$fg[magenta]%}${ref#refs/heads/}"
  [ -n "$ahead" ]        && r="$r %{$reset_color%}↑$ahead"
  [ -n "$behind" ]       && r="$r %{$reset_color%}↓$behind"
  [ "$staged"    -gt 0 ] && r="$r %{$fg[green]%}●$staged"
  [ "$unstaged"  -gt 0 ] && r="$r %{$fg[red]%}●$unstaged"
  [ "$untracked" -gt 0 ] && r="$r %{$fg[red]%}✖ $untracked"
  #echo "%{$reset_color%}($r%{$reset_color%})"
  echo "%{$fg[white]%}($r%{$fg[white]%})"
}

setopt PROMPT_SUBST
export PROMPT="%{$fg[green]%}%n@%m: %{$fg[yellow]%}%~ \$(git_info)
%{$reset_color%}> "
#export RPS1="%B%{$fg[cyan]%}%*%b%{$reset_color%}"

# Start new terminal tabs in the working directory
if [ -e /etc/profile.d/vte.sh ]; then
  source /etc/profile.d/vte.sh
#  __vte_ps1
#  chpwd() { __vte_ps1 }
fi

bindkey '^A' beginning-of-line
bindkey '^D' delete-char-or-list
bindkey '^E' end-of-line
bindkey '^U' backward-kill-line
bindkey '^K' kill-line
bindkey "^[^H" backward-kill-word # alt-backspace
bindkey "^[^?" backward-kill-word # alt-backspace
bindkey "^[f" forward-word # alt-F
bindkey "^[b" backward-word # alt-B
bindkey "^[d" delete-word # alt-D
bindkey "^[[1;5D" backward-word # ctrl-left
bindkey "^[[1;5C" forward-word # ctrl-right
bindkey '^ ' list-choices # ctrl-space
bindkey '^r' history-incremental-search-backward
bindkey '^[.' insert-last-word # alt-.

source_if_exists /usr/share/fzf/completion.zsh
source_if_exists /usr/share/fzf/key-bindings.zsh
complete -C aws_completer aws

# cp /etc/blah<ALT-Q>
# cp /etc/blah /etc/blah
zle-copy_last_word_on_current_line(){
  setopt extendedglob
  local m=${LBUFFER%% ##} # Remove trailing spaces
  m=${m##* } # Delete up to last space
  [ -n "$m" ] || return
  [[ "$LBUFFER" =~ ' $' ]] || m=" $m"
  LBUFFER+="$m"
  #zle redisplay
}
zle -N zle-copy_last_word_on_current_line
bindkey '^[q' zle-copy_last_word_on_current_line

export WORDCHARS='*?_[]~=&!#$%^(){}'

# RVM
#[ -e "$HOME/.rvm/scripts/zsh/Completion" ] && fpath=($HOME/.rvm/scripts/zsh/Completion $fpath)

# Google Cloud
#[ -e /opt/google-cloud-sdk/path.zsh.inc ] && source /opt/google-cloud-sdk/path.zsh.inc
#[ -e /opt/google-cloud-sdk/completion.zsh.inc ] && source /opt/google-cloud-sdk/completion.zsh.inc
#which kubectl &>/dev/null
#[ $? -eq 0 ] && source <(kubectl completion zsh)

# Rustup
#which rustup &>/dev/null
#[ $? -eq 0 ] && source <(rustup completions zsh)

# Distro-specific
source "$HOME/.golly-rc/lib/distro.sh"
case "$(distro)" in
  OSX)
    # Set the tab title to the cwd
    function precmd () {
      window_title="\033]0;${PWD##*/}\007"
      echo -ne "$window_title"
    }
    ;;
  *)
    ;;
esac

